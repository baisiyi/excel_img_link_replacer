name: Build and Package

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.24'
  PROJECT_NAME: 'excel-img-link-replacer'
  APP_NAME: 'Excel 图片替换工具'

jobs:
  # 构建所有平台的可执行文件
  build:
    name: Build All Platforms
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Build Linux AMD64
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/${PROJECT_NAME}-linux-amd64 ./cmd/desktop
        
    - name: Build Windows AMD64
      run: |
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/${PROJECT_NAME}-windows-amd64.exe ./cmd/desktop
        
    - name: Build macOS AMD64
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/${PROJECT_NAME}-darwin-amd64 ./cmd/desktop
        
    - name: Build macOS ARM64
      run: |
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/${PROJECT_NAME}-darwin-arm64 ./cmd/desktop
        
    - name: Show build results
      run: |
        ls -la dist/
        file dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  # 创建分发包
  package:
    name: Create Distribution Packages
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        
    - name: Create distribution packages
      run: |
        mkdir -p packages
        # 创建各平台的分发包
        zip packages/${PROJECT_NAME}-linux-amd64.zip dist/${PROJECT_NAME}-linux-amd64
        zip packages/${PROJECT_NAME}-windows-amd64.zip dist/${PROJECT_NAME}-windows-amd64.exe
        zip packages/${PROJECT_NAME}-darwin-amd64.zip dist/${PROJECT_NAME}-darwin-amd64
        zip packages/${PROJECT_NAME}-darwin-arm64.zip dist/${PROJECT_NAME}-darwin-arm64
        # 创建通用分发包
        zip packages/${PROJECT_NAME}-all-platforms.zip dist/*
        ls -la packages/
        
    - name: Upload distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: distribution-packages
        path: packages/

  # 创建 Release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, package]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: distribution-packages
        path: packages/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          packages/${PROJECT_NAME}-linux-amd64.zip
          packages/${PROJECT_NAME}-windows-amd64.zip
          packages/${PROJECT_NAME}-darwin-amd64.zip
          packages/${PROJECT_NAME}-darwin-arm64.zip
          packages/${PROJECT_NAME}-all-platforms.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
